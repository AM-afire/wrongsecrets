package org.owasp.wrongsecrets.challenges.{{platform}};

import org.owasp.wrongsecrets.RuntimeEnvironment;
import org.owasp.wrongsecrets.ScoreCard;
import org.owasp.wrongsecrets.challenges.Challenge;
import org.owasp.wrongsecrets.challenges.ChallengeTechnology;
import org.owasp.wrongsecrets.challenges.Difficulty;
import org.owasp.wrongsecrets.challenges.Spoiler;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import java.util.List;

{{
extra_imports
}}

@Component
@Order(0)
public class Challenge{{challenge_number}} extends Challenge {

    public Challenge{{challenge_number}}(ScoreCard scoreCard) {
        super(scoreCard);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Spoiler spoiler() {
        return new Spoiler(getData());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected boolean answerCorrect(String answer) {
        return getData().equals(answer);
    }

    @Override
    /**
     * {@inheritDoc}
     */
    public List<RuntimeEnvironment.Environment> supportedRuntimeEnvironments() {
        return List.of(RuntimeEnvironment.Environment.{{environment}});
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public int difficulty() {
        return Difficulty.{{difficulty}};
    }

    @Override
    public String getTech() {
        return ChallengeTechnology.Tech.{{technology}}.id;
    }

    @Override
    public boolean isLimitedWhenOnlineHosted() {
        return false;
    }

    @Override
    public boolean canRunInCTFMode() {
        return true;
    }

    private String getData() {
        return "<<replace with correct answer>>";
    }
}
